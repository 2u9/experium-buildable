//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Luni\Documents\1.12 stable mappings"!

// 
// Decompiled by Procyon v0.5.36
// 

package dev._3000IQPlay.experium.features.modules.exploit;

import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.init.Items;
import net.minecraftforge.event.entity.player.PlayerInteractEvent;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.item.ItemAppleGold;
import dev._3000IQPlay.experium.features.setting.Setting;
import dev._3000IQPlay.experium.features.modules.Module;

public class PacketEat extends Module
{
    private final Setting<Mode> mode;
    private final Setting<Double> packetSize;
    
    public PacketEat() {
        super("PacketEat", "Using packets to eat.", Category.EXPLOIT, true, false, false);
        this.mode = (Setting<Mode>)this.register(new Setting("Mode", (T)Mode.Packet));
        this.packetSize = (Setting<Double>)this.register(new Setting("PacketIteration", (T)20.0, (T)0.0, (T)40.0));
    }
    
    @Override
    public void onUpdate() {
        if (PacketEat.mc.player.isHandActive() && PacketEat.mc.player.getHeldItemMainhand().getItem() instanceof ItemAppleGold && this.mode.getValue() == Mode.Packet) {
            for (int i = 0; i < this.packetSize.getValue(); ++i) {
                PacketEat.mc.player.connection.sendPacket((Packet)new CPacketPlayer());
            }
            PacketEat.mc.player.stopActiveHand();
        }
    }
    
    @SubscribeEvent
    public void onPlayerRightClick(final PlayerInteractEvent.RightClickItem event) {
        if (event.getItemStack().getItem().equals(Items.GOLDEN_APPLE) && this.mode.getValue() == Mode.Desync) {
            event.setCanceled(true);
            event.getItemStack().getItem().onItemUseFinish(event.getItemStack(), event.getWorld(), (EntityLivingBase)event.getEntityPlayer());
        }
    }
    
    public enum Mode
    {
        Packet, 
        Desync;
    }
}
